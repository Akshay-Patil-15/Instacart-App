{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = App;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _HomeScreen = _interopRequireDefault(require(\"./screens/HomeScreen\"));\n\nvar _MainScreen = _interopRequireDefault(require(\"./screens/MainScreen\"));\n\nvar _ResultScreen = _interopRequireDefault(require(\"./screens/ResultScreen\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _navigation = _interopRequireDefault(require(\"./navigation/navigation\"));\n\nvar _jsxFileName = \"/Users/akshay/Documents/GitHub/Instacart-App/App.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction App() {\n  var buttonClickedHandler = function buttonClickedHandler() {\n    console.log(\"You have been clicked a button!\");\n  };\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_native.NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_navigation.default, {\n    result: result,\n    setResult: setResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    flexDirection: \"row\"\n  },\n  imgBackground: {\n    width: \"100%\",\n    height: \"100%\",\n    flex: 1\n  },\n  viewstyle: {\n    flex: 1,\n    padding: 1,\n    marginTop: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 1\n  },\n  txtStyle: {\n    borderBottomWidth: 1,\n    borderBottomColor: \"orange\",\n    marginTop: 1,\n    marginBottom: 1\n  },\n  roundButton: {\n    width: 100,\n    height: 100,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 100,\n    backgroundColor: \"orange\",\n    flexDirection: \"row\",\n    marginLeft: 20\n  },\n  buttonContainer: {\n    backgroundColor: \"#2E9298\",\n    borderRadius: 10,\n    padding: 10,\n    shadowColor: \"#000000\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowRadius: 10,\n    shadowOpacity: 0.25\n  }\n});","map":{"version":3,"sources":["/Users/akshay/Documents/GitHub/Instacart-App/App.js"],"names":["App","buttonClickedHandler","console","log","result","setResult","styles","container","StyleSheet","create","flex","justifyContent","flexDirection","imgBackground","width","height","viewstyle","padding","marginTop","alignItems","marginBottom","txtStyle","borderBottomWidth","borderBottomColor","roundButton","borderRadius","backgroundColor","marginLeft","buttonContainer","shadowColor","shadowOffset","shadowRadius","shadowOpacity"],"mappings":";;;;;;;;;AAOA;;AAEA;;AAcA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAGe,SAASA,GAAT,GAAe;AAC5B,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AAED,GAHD;;AAIA,kBAA4B,qBAAS,EAAT,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AAEA,SACE,4DACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,mBAAD;AAAS,IAAA,MAAM,EAAEH,MAAjB;AAAyB,IAAA,SAAS,EAAEC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAsDD;;AAED,IAAMC,MAAM,GAAGE,wBAAWC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,aAAa,EAAE;AALN,GADoB;AAa/BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,KAAK,EAAE,MADM;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbL,IAAAA,IAAI,EAAE;AAHO,GAbgB;AAmB/BM,EAAAA,SAAS,EAAE;AACTN,IAAAA,IAAI,EAAE,CADG;AAETO,IAAAA,OAAO,EAAE,CAFA;AAGTC,IAAAA,SAAS,EAAE,CAHF;AAITP,IAAAA,cAAc,EAAE,QAJP;AAKTQ,IAAAA,UAAU,EAAE,QALH;AAMTC,IAAAA,YAAY,EAAE;AANL,GAnBoB;AA4B/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,iBAAiB,EAAE,CADX;AAERC,IAAAA,iBAAiB,EAAE,QAFX;AAGRL,IAAAA,SAAS,EAAE,CAHH;AAIRE,IAAAA,YAAY,EAAE;AAJN,GA5BqB;AAmC/BI,EAAAA,WAAW,EAAE;AACXV,IAAAA,KAAK,EAAE,GADI;AAEXC,IAAAA,MAAM,EAAE,GAFG;AAGXJ,IAAAA,cAAc,EAAE,QAHL;AAIXQ,IAAAA,UAAU,EAAE,QAJD;AAMXM,IAAAA,YAAY,EAAE,GANH;AAOXC,IAAAA,eAAe,EAAE,QAPN;AAQXd,IAAAA,aAAa,EAAE,KARJ;AASXe,IAAAA,UAAU,EAAE;AATD,GAnCkB;AAiD/BC,EAAAA,eAAe,EAAE;AACfF,IAAAA,eAAe,EAAE,SADF;AAEfD,IAAAA,YAAY,EAAE,EAFC;AAGfR,IAAAA,OAAO,EAAE,EAHM;AAIfY,IAAAA,WAAW,EAAE,SAJE;AAKfC,IAAAA,YAAY,EAAE;AACZhB,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KALC;AASfgB,IAAAA,YAAY,EAAE,EATC;AAUfC,IAAAA,aAAa,EAAE;AAVA;AAjDc,CAAlB,CAAf","sourcesContent":["// import { StatusBar } from \"expo-status-bar\";\n//import {\n//useDimensions,\n//useDeviceOrientation,\n//} from \"@react-native-community/hooks\";\n//import { range } from \"express/lib/request\";\n//import mysql from \"mysql\";\nimport React from \"react\";\n\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  Image,\n  TouchableNativeFeedback,\n  Button,\n  Alert,\n  Dimensions,\n  TextInput,\n  TouchableOpacity,\n  ImageBackground,\n} from \"react-native\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport MainScreen from \"./screens/MainScreen\";\nimport ResultScreen from \"./screens/ResultScreen\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport MyStack from \"./navigation/navigation\";\nimport { useState } from \"react\";\n\nexport default function App() {\n  const buttonClickedHandler = () => {\n    console.log(\"You have been clicked a button!\");\n    // do something\n  };\n  const [result, setResult] = useState([]);\n\n  return (\n    <>\n      <View style={styles.container}>\n        <NavigationContainer>\n          <MyStack result={result} setResult={setResult}></MyStack>\n        </NavigationContainer>\n        {/* <HomeScreen></HomeScreen> */}\n        {/* <MainScreen></MainScreen> */}\n        {/* <ResultScreen></ResultScreen> */}\n        {/* <ImageBackground\n          style={styles.imgBackground}\n          resizeMode=\"cover\"\n          source={{\n            uri: \"https://media.idownloadblog.com/wp-content/uploads/2019/04/Gradient-V1-iphone-wallpaper-gradient-AR72014-768x1662.png\",\n          }}\n        >\n          <View style={styles.viewstyle}>\n            <TextInput\n              placeholder={\"Enter your query\"}\n              placeholderTextColor={\"#fff\"}\n              keyboardType={\"default\"}\n              width={\"70%\"}\n              style={styles.txtStyle}\n            />\n            <View style={styles.container}>\n              <TouchableOpacity\n                onPress={buttonClickedHandler}\n                style={styles.roundButton}\n              >\n                <Text>Amazon RDS</Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                onPress={buttonClickedHandler}\n                style={styles.roundButton}\n              >\n                <Text>Amazon Redshift</Text>\n              </TouchableOpacity>\n            </View>\n            <View style={styles.container}>\n              <Button\n                title={\"Find record\"}\n                color={\"orange\"}\n                style={styles.buttonContainer}\n                onPress={() => {\n                  console.log(\"Query executed!\");\n                }}\n              />\n            </View>\n          </View>\n        </ImageBackground> */}\n      </View>\n    </>\n  );\n}\n//278840342059917\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    //backgroundColor: \"#fff\",\n    //alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    //width: \"100%\",\n    //height: \"100%\",\n    //flex: 1,\n    //marginTop: 200,\n  },\n\n  imgBackground: {\n    width: \"100%\",\n    height: \"100%\",\n    flex: 1,\n  },\n\n  viewstyle: {\n    flex: 1,\n    padding: 1,\n    marginTop: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 1,\n  },\n\n  txtStyle: {\n    borderBottomWidth: 1,\n    borderBottomColor: \"orange\",\n    marginTop: 1,\n    marginBottom: 1,\n  },\n\n  roundButton: {\n    width: 100,\n    height: 100,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    //padding: 10,\n    borderRadius: 100,\n    backgroundColor: \"orange\",\n    flexDirection: \"row\",\n    marginLeft: 20,\n    //marginBottom: 1,\n    //justifyContent: \"space-evenly\",\n  },\n\n  buttonContainer: {\n    backgroundColor: \"#2E9298\",\n    borderRadius: 10,\n    padding: 10,\n    shadowColor: \"#000000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowRadius: 10,\n    shadowOpacity: 0.25,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}