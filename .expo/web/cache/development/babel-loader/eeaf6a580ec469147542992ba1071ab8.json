{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = MainScreen;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/Users/akshay/Documents/GitHub/Instacart-App/screens/MainScreen.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction MainScreen(_ref) {\n  var navigation = _ref.navigation,\n      setResult = _ref.setResult,\n      setFields = _ref.setFields,\n      setTime = _ref.setTime;\n\n  var _useState = (0, _react.useState)(\"\"),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      database = _useState2[0],\n      setDatabase = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(\"\"),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      query = _useState4[0],\n      setquery = _useState4[1];\n\n  var fetch_results = function fetch_results() {\n    return fetch(\"http://54.163.139.54:5001/api/fetch_results\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\"\n      },\n      body: JSON.stringify({\n        query: query,\n        database: database\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      if (json.status === \"Done\") {\n        console.log(\"Connected to Amazon RDS\", json.result);\n        setResult(json.result);\n        setFields(json.fields);\n        setTime(json.time);\n        navigation.navigate(\"ResultScreen\");\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  console.log(query);\n  console.log(database);\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.textInputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    placeholder: \"Tap to enter SQL query\",\n    keyboardType: \"default\",\n    width: \"100%\",\n    style: styles.textInput,\n    multiline: true,\n    onChangeText: setquery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Select a Database\")), _react.default.createElement(_reactNative.View, {\n    style: styles.dbButtonView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.dbButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.dbButtonText,\n    onPress: function onPress() {\n      return setDatabase(\"RDS\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Amazon RDS\"))), _react.default.createElement(_reactNative.View, {\n    style: styles.dbButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.dbButtonText,\n    onPress: function onPress() {\n      return setDatabase(\"Redshift\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Amazon Redshift\")))), _react.default.createElement(_reactNative.View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: fetch_results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Fetch Records\"))));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    padding: 40,\n    paddingHorizontal: 20,\n    height: \"100%\"\n  },\n  textInputView: {\n    flexWrap: \"wrap\",\n    borderColor: \"#023047\",\n    borderWidth: 5,\n    borderRadius: 20\n  },\n  textInput: {\n    padding: 20,\n    fontSize: 40,\n    fontWeight: \"bold\",\n    color: \"#023047\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    flexWrap: \"wrap\"\n  },\n  title: {\n    fontSize: 40,\n    fontWeight: \"bold\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40,\n    marginBottom: 30\n  },\n  titleText: {\n    fontSize: 40,\n    fontWeight: \"bold\",\n    color: \"#023047\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  dbButtonView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    marginTop: 20,\n    marginBottom: 30,\n    flex: 1\n  },\n  dbButton: {\n    width: \"40%\",\n    height: \"40%\",\n    backgroundColor: \"#fb8500\",\n    padding: 16,\n    borderRadius: 20,\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  dbButtonText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    textAlign: \"center\"\n  },\n  button: {\n    width: \"100%\",\n    backgroundColor: \"#023047\",\n    padding: 16,\n    borderRadius: 20,\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  buttonText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["/Users/akshay/Documents/GitHub/Instacart-App/screens/MainScreen.js"],"names":["MainScreen","navigation","setResult","setFields","setTime","database","setDatabase","query","setquery","fetch_results","fetch","method","cache","headers","content_type","body","JSON","stringify","then","response","json","status","console","log","result","fields","time","navigate","catch","error","styles","container","textInputView","textInput","title","titleText","dbButtonView","dbButton","dbButtonText","button","buttonText","StyleSheet","create","padding","paddingHorizontal","height","flexWrap","borderColor","borderWidth","borderRadius","fontSize","fontWeight","color","justifyContent","alignItems","textAlign","marginTop","marginBottom","flexDirection","flex","width","backgroundColor"],"mappings":"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","sourcesContent":["// import { StatusBar } from \"expo-status-bar\";\n//import {\n//useDimensions,\n//useDeviceOrientation,\n//} from \"@react-native-community/hooks\";\n//import { range } from \"express/lib/request\";\n//import mysql from \"mysql\";\nimport React, { useState } from \"react\";\n\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  Image,\n  TouchableNativeFeedback,\n  Button,\n  Alert,\n  Dimensions,\n  TextInput,\n  TouchableOpacity,\n  ImageBackground,\n} from \"react-native\";\n\nexport default function MainScreen({\n  navigation,\n  setResult,\n  setFields,\n  setTime,\n}) {\n  const [database, setDatabase] = useState(\"\");\n  const [query, setquery] = useState(\"\");\n  //const [result, setResult] = useState([]);\n\n  const fetch_results = () => {\n    return fetch(\"http://54.163.139.54:5001/api/fetch_results\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        content_type: \"application/json\",\n      },\n      body: JSON.stringify({ query: query, database: database }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        if (json.status === \"Done\") {\n          console.log(\"Connected to Amazon RDS\", json.result);\n          setResult(json.result);\n          setFields(json.fields);\n          setTime(json.time);\n          navigation.navigate(\"ResultScreen\");\n          //setUserID(user)\n          //history.push('/auth/main');\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    //console.log(\"Fetch records working\");\n  };\n  console.log(query);\n  console.log(database);\n  return (\n    <View style={styles.container}>\n      <View style={styles.textInputView}>\n        <TextInput\n          placeholder={\"Tap to enter SQL query\"}\n          keyboardType={\"default\"}\n          width={\"100%\"}\n          style={styles.textInput}\n          multiline={true}\n          onChangeText={setquery}\n        />\n      </View>\n      <View style={styles.title}>\n        <Text style={styles.titleText}>Select a Database</Text>\n      </View>\n      <View style={styles.dbButtonView}>\n        <View style={styles.dbButton}>\n          <TouchableOpacity>\n            <Text\n              style={styles.dbButtonText}\n              onPress={() => setDatabase(\"RDS\")}\n            >\n              Amazon RDS\n            </Text>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.dbButton}>\n          <TouchableOpacity>\n            <Text\n              style={styles.dbButtonText}\n              onPress={() => setDatabase(\"Redshift\")}\n            >\n              Amazon Redshift\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n      <View style={styles.button}>\n        <TouchableOpacity onPress={fetch_results}>\n          <Text style={styles.buttonText}>Fetch Records</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n//278840342059917\nconst styles = StyleSheet.create({\n  container: {\n    padding: 40,\n    paddingHorizontal: 20,\n    height: \"100%\",\n    //backgroundColor: \"#219ebc\",\n  },\n\n  textInputView: {\n    flexWrap: \"wrap\",\n    borderColor: \"#023047\",\n    borderWidth: 5,\n    borderRadius: 20,\n  },\n\n  textInput: {\n    padding: 20,\n    fontSize: 40,\n    fontWeight: \"bold\",\n    color: \"#023047\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    //borderRadius: 20,\n    flexWrap: \"wrap\",\n    //borderWidth: 5,\n    //borderColor: \"023047\",\n  },\n\n  title: {\n    fontSize: 40,\n    fontWeight: \"bold\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40,\n    marginBottom: 30,\n  },\n\n  titleText: {\n    fontSize: 40,\n    fontWeight: \"bold\",\n    color: \"#023047\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  dbButtonView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    marginTop: 20,\n    marginBottom: 30,\n    flex: 1,\n  },\n\n  dbButton: {\n    width: \"40%\",\n    height: \"40%\",\n    backgroundColor: \"#fb8500\",\n    padding: 16,\n    borderRadius: 20,\n    //position: \"relative\",\n    //justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 10,\n    //flexDirection: \"row\",\n    //flex: 1,\n  },\n\n  dbButtonText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    //position: \"relative\",\n    //justifyContent: \"center\",\n    //alignItems: \"center\",\n    textAlign: \"center\",\n  },\n\n  button: {\n    width: \"100%\",\n    backgroundColor: \"#023047\",\n    padding: 16,\n    borderRadius: 20,\n    alignItems: \"center\",\n    marginBottom: 10,\n  },\n\n  buttonText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n  },\n});\n"]},"metadata":{},"sourceType":"script"}