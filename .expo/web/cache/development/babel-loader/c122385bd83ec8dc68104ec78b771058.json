{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Cell = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/Users/akshay/Documents/GitHub/Instacart-App/node_modules/react-native-table-component/components/cell.js\";\nvar _excluded = [\"data\", \"width\", \"height\", \"flex\", \"style\", \"textStyle\", \"borderStyle\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Cell = function (_Component) {\n  (0, _inherits2.default)(Cell, _Component);\n\n  var _super = _createSuper(Cell);\n\n  function Cell() {\n    (0, _classCallCheck2.default)(this, Cell);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(Cell, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          width = _this$props.width,\n          height = _this$props.height,\n          flex = _this$props.flex,\n          style = _this$props.style,\n          textStyle = _this$props.textStyle,\n          borderStyle = _this$props.borderStyle,\n          props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);\n      var textDom = _react.default.isValidElement(data) ? data : _react.default.createElement(_reactNative.Text, (0, _extends2.default)({\n        style: [textStyle, styles.text]\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }), data);\n      var borderTopWidth = borderStyle && borderStyle.borderWidth || 0;\n      var borderRightWidth = borderTopWidth;\n      var borderColor = borderStyle && borderStyle.borderColor || '#000';\n      return _react.default.createElement(_reactNative.View, {\n        style: [{\n          borderTopWidth: borderTopWidth,\n          borderRightWidth: borderRightWidth,\n          borderColor: borderColor\n        }, styles.cell, width && {\n          width: width\n        }, height && {\n          height: height\n        }, flex && {\n          flex: flex\n        }, !width && !flex && !height && !style && {\n          flex: 1\n        }, style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, textDom);\n    }\n  }]);\n  return Cell;\n}(_react.Component);\n\nexports.Cell = Cell;\nCell.propTypes = {\n  style: _propTypes.default.object,\n  textStyle: _propTypes.default.object,\n  borderStyle: _propTypes.default.object\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  cell: {\n    justifyContent: 'center'\n  },\n  text: {\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"sources":["/Users/akshay/Documents/GitHub/Instacart-App/node_modules/react-native-table-component/components/cell.js"],"names":["Cell","props","data","width","height","flex","style","textStyle","borderStyle","textDom","React","isValidElement","styles","text","borderTopWidth","borderWidth","borderRightWidth","borderColor","cell","Component","propTypes","PropTypes","object","StyleSheet","create","justifyContent","backgroundColor"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;IAEaA,I;;;;;;;;;;;;WAOX,kBAAS;AACP,wBAA+E,KAAKC,KAApF;AAAA,UAAQC,IAAR,eAAQA,IAAR;AAAA,UAAcC,KAAd,eAAcA,KAAd;AAAA,UAAqBC,MAArB,eAAqBA,MAArB;AAAA,UAA6BC,IAA7B,eAA6BA,IAA7B;AAAA,UAAmCC,KAAnC,eAAmCA,KAAnC;AAAA,UAA0CC,SAA1C,eAA0CA,SAA1C;AAAA,UAAqDC,WAArD,eAAqDA,WAArD;AAAA,UAAqEP,KAArE;AACA,UAAMQ,OAAO,GAAGC,eAAMC,cAAN,CAAqBT,IAArB,IACdA,IADc,GAGd,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE,CAACK,SAAD,EAAYK,MAAM,CAACC,IAAnB;AAAb,SAA2CZ,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGC,IADH,CAHF;AAOA,UAAMY,cAAc,GAAIN,WAAW,IAAIA,WAAW,CAACO,WAA5B,IAA4C,CAAnE;AACA,UAAMC,gBAAgB,GAAGF,cAAzB;AACA,UAAMG,WAAW,GAAIT,WAAW,IAAIA,WAAW,CAACS,WAA5B,IAA4C,MAAhE;AAEA,aACE,6BAAC,iBAAD;AACE,QAAA,KAAK,EAAE,CACL;AACEH,UAAAA,cAAc,EAAdA,cADF;AAEEE,UAAAA,gBAAgB,EAAhBA,gBAFF;AAGEC,UAAAA,WAAW,EAAXA;AAHF,SADK,EAMLL,MAAM,CAACM,IANF,EAOLf,KAAK,IAAI;AAAEA,UAAAA,KAAK,EAALA;AAAF,SAPJ,EAQLC,MAAM,IAAI;AAAEA,UAAAA,MAAM,EAANA;AAAF,SARL,EASLC,IAAI,IAAI;AAAEA,UAAAA,IAAI,EAAJA;AAAF,SATH,EAUL,CAACF,KAAD,IAAU,CAACE,IAAX,IAAmB,CAACD,MAApB,IAA8B,CAACE,KAA/B,IAAwC;AAAED,UAAAA,IAAI,EAAE;AAAR,SAVnC,EAWLC,KAXK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAeGG,OAfH,CADF;AAmBD;;;EAvCuBU,gB;;;AAAbnB,I,CACJoB,S,GAAY;AACjBd,EAAAA,KAAK,EAAEe,mBAAUC,MADA;AAEjBf,EAAAA,SAAS,EAAEc,mBAAUC,MAFJ;AAGjBd,EAAAA,WAAW,EAAEa,mBAAUC;AAHN,C;;AAyCrB,IAAMV,MAAM,GAAGW,wBAAWC,MAAX,CAAkB;AAC/BN,EAAAA,IAAI,EAAE;AAAEO,IAAAA,cAAc,EAAE;AAAlB,GADyB;AAE/BZ,EAAAA,IAAI,EAAE;AAAEa,IAAAA,eAAe,EAAE;AAAnB;AAFyB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Text, StyleSheet } from 'react-native';\n\nexport class Cell extends Component {\n  static propTypes = {\n    style: PropTypes.object,\n    textStyle: PropTypes.object,\n    borderStyle: PropTypes.object\n  };\n\n  render() {\n    const { data, width, height, flex, style, textStyle, borderStyle, ...props } = this.props;\n    const textDom = React.isValidElement(data) ? (\n      data\n    ) : (\n      <Text style={[textStyle, styles.text]} {...props}>\n        {data}\n      </Text>\n    );\n    const borderTopWidth = (borderStyle && borderStyle.borderWidth) || 0;\n    const borderRightWidth = borderTopWidth;\n    const borderColor = (borderStyle && borderStyle.borderColor) || '#000';\n\n    return (\n      <View\n        style={[\n          {\n            borderTopWidth,\n            borderRightWidth,\n            borderColor\n          },\n          styles.cell,\n          width && { width },\n          height && { height },\n          flex && { flex },\n          !width && !flex && !height && !style && { flex: 1 },\n          style\n        ]}\n      >\n        {textDom}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  cell: { justifyContent: 'center' },\n  text: { backgroundColor: 'transparent' }\n});"]},"metadata":{},"sourceType":"script"}